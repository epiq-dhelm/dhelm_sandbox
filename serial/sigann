#!/bin/python3

import io
import time
  
import serial
import serial.tools.list_ports

import binascii

def SendCommand(port, cmd):
    sCompleteCommand = "#" + chr(len(cmd) + 2) + cmd
    bytestr = sCompleteCommand.encode('utf-8')
    length = port.write(bytestr)
    print("length sent", length)
    print("RFE Command: #(" + str(len(sCompleteCommand)) + ")" + cmd + " [" + " ".join("{:02X}".format(ord(c)) for c in sCompleteCommand) + "]")


ports = list(serial.tools.list_ports.comports())
if(ports):
    print("Detected COM ports:")
    for idx, objPort in enumerate(ports):
        print(idx, objPort.device)

val = input("enter port number")

ser = serial.Serial(ports[int(val)].device, 500000, timeout=5.0)

#ser = serial.Serial('/dev/ttyUSB3', 500000, timeout=5.0)
sio = io.TextIOWrapper(io.BufferedRWPair(ser, ser))
print(ser.name)

cmd = "r"
SendCommand(ser, cmd)

time.sleep(2)

cmd = "C0"
SendCommand(ser, cmd)
print("reading...")

config = ['Start_Freq (Khz)\t', 'Freq_Step (Hz)\t\t', 'Amp_Top (dBm)\t\t', 'Amp_Bottom (dBm)\t', 'Sweep_points\t\t', 'ExpModuleActive\t\t', 'CurrentMode\t\t', 'Min_Freq (Khz)\t\t', 'Max_Freq (Khz)\t\t', 'Max_Span (Khz)\t\t', 'RBW (Khz)\t\t', 'AmpOffset (dB)\t\t', 'CalculatorMode \t\t']

while 1:
    try:
        line = ser.readline()
        cmd = str(line[0:5], 'utf-8', errors='ignore')
        print('cmd: ', cmd, '  len: ',  len(line))
        newline = str(line, 'utf-8', errors='ignore')

        if cmd == '#C2-M':
            print('current setup')
        
        if cmd == '#C2-F':
            listline = newline.replace("#C2-F:", "")
            print('\nCurrent Config')
            mylist = listline.split(",")
            for idx, fname in enumerate(config):
                print(fname, mylist[idx])
            print("\n")

        if cmd[0:2] == '$S':
            print('sweep data')
            print(line)

        if cmd[0:3] == '#Sn':
            print('serial number')



    except serial.SerialException as e:
        print('Device error: {}'.format(e))
        break


